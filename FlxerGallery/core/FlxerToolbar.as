package FlxerGallery.core {	import flash.display.Stage;	import flash.display.MovieClip;	import flash.events.*;	import flash.ui.ContextMenu;	import flash.ui.ContextMenuItem;    import flash.ui.ContextMenuBuiltInItems;	import flash.ui.Keyboard;	import flash.geom.Rectangle;	import flash.display.Bitmap;	import flash.display.BitmapData;	import flash.utils.getTimer;	import flash.net.navigateToURL;	import flash.net.URLRequest;	import flash.net.URLLoader;	import flash.printing.PrintJob;	import flash.geom.ColorTransform;	import FlxerGallery.main.BitmapDataToBinaryPNG	import FlxerGallery.main.ByteArrayUploader	import FlxerGallery.main.Txt;	public class FlxerToolbar extends MovieClip {		var w;		var h;		//		public var testa		public var fondo		public var piede		public var lab_i		public var tit		public var myEmbed		public var mmSelTit		var barr_width		var bd		var ppBig        private var myContextMenu:ContextMenu;		/*		var tipo		var single		var myKeyL;		var noImg;		var t		*/		public function FlxerToolbar() {			piede.selector.visible = piede.ss.visible=piede.m.visible=false;			piede.toppa.visible = true;			avviaPuls();			this.piede.myMenu = new Txt(3,0,100,300,"bella","puls");			this.piede.addChild(this.piede.myMenu)			this.piede.myMenu.visible = false;			this.myEmbed = new Embed();						var myCol:ColorTransform			myCol = this.testa.transform.colorTransform;			myCol.color = Preferences.pref.toolbarHead;			this.testa.transform.colorTransform = myCol;						lab_i.textColor = Preferences.pref.toolbarHeadTxt;						myCol = this.piede.toppa.transform.colorTransform;			myCol.color = Preferences.pref.toolbarBackground;			this.piede.toppa.transform.colorTransform = myCol;						myCol = this.piede.piedeEst.transform.colorTransform;			myCol.color = Preferences.pref.toolbarBorder;			this.piede.piedeEst.transform.colorTransform = myCol;						myCol = piede.piedeInt.transform.colorTransform;			myCol.color = Preferences.pref.toolbarBackground;			piede.piedeInt.transform.colorTransform = myCol;			//piede.counter.lab.width = piede.counter.lab.textWidth+8			setPos();		}		function avvia(stat) {			creaContextMenu(stat);			piede.m.visible = true;			if (stat == "player") {				parent.mySelector.resetta();				piede.selector.visible = !Preferences.pref.single;				//piede.selector.visible = false;				//				piede.toppa.visible = false;				piede.ss.visible = false;				trace("RRRRRRRRRRRRRRRRRRRR Preferences.pref.tipo "+Preferences.pref.tipo)				if (Preferences.pref.tipo == "jpg") {					piede.contr.volume_ctrl.visible = false;				} else {					piede.contr.volume_ctrl.visible = true;				}				avviaPuls();			} else {				parent.mySelector.avvia();				parent.mySuperPlayer.resetta();				//				piede.ss.visible = !Preferences.pref.noImg;				if (piede.ss.visible) {					piede.ss.avvia({fnz:avviaSS,txt:Preferences.pref.ssLabel,alt:Preferences.pref.ssAlt,param:0});				}				piede.toppa.visible = true;				this.lab_i.htmlText = mmSelTit;			}			setPos();		}		public function avviaSS(n) {			if (n is Number) {				nn = n;			} else {				nn = 0;			}			avvia("player");			this.parent.mySuperPlayer.avviaSS(nn);		}		public function avviaSP(n) {			if (n is Number) {				nn = n;			} else {				nn = 0;			}			avvia("player");			this.parent.mySuperPlayer.avvia(nn);		}		public function avviaSelector(a) {			avvia("selector");		}		public function disable() {			stage.removeEventListener(KeyboardEvent.KEY_DOWN, reportKeyDown);			piede.contr.fw.disable();			piede.contr.rw.disable();			piede.contr.playpause.disable();			piede.indice.curs.disable();			trace("YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY")			piede.contr.volume_ctrl.disable();		}		public function enable() {			stage.addEventListener(KeyboardEvent.KEY_DOWN, reportKeyDown);			piede.contr.fw.enable();			piede.contr.rw.enable();			piede.contr.playpause.enable();			piede.indice.curs.enable();			piede.contr.volume_ctrl.enable();		}		function avviaPuls() {			piede.m.avvia({fnz:apriMenu,txt:Preferences.pref.mLabel,alt:Preferences.pref.menuAlt});			piede.selector.avvia({fnz:avviaSelector,txt:Preferences.pref.pLabel,alt:Preferences.pref.selAlt});			//			piede.logo.avvia({fnz:vaiLogoUrl,alt:Preferences.pref.logoAlt});			piede.contr.fw.avvia({fnz:avanti,alt:Preferences.pref.fwAlt});			piede.contr.rw.avvia({fnz:indietro,alt:Preferences.pref.rwAlt});			piede.contr.playpause.avvia({fnz:myPlaypause,alt:Preferences.pref.playpauseAlt});			piede.indice.curs.avvia({fnz:scratch,alt:Preferences.pref.cursAlt,fnzOut:stopScratch});			piede.contr.volume_ctrl.avvia({fnz:regolaVolume,alt:Preferences.pref.volumeAlt});			//disable();		}		public function vaiLogoUrl(t) {			navigateToURL(new URLRequest(Preferences.pref.logoURL),"_blank")		}		function regolaVolume(a) {			parent.mySuperPlayer.mbuto(getTimer()+",setVol,0,"+a);		}		function setPos() {			w = Preferences.pref.w;			h = Preferences.pref.h;			if (testa) {				testa.width = w;			}			if (ppBig!=undefined) {				ppBig.x = (w-ppBig.width)/2;				ppBig.y = (h-ppBig.height)/2;			}			piede.piedeEst.width = fondo.width=w;			fondo.height=h-(testa.height+1)-(piede.piedeEst.height+1);			fondo.y = testa.height+1			lab_i.width = w-10;						piede.y = h-piede.piedeEst.height;			piede.piedeEst.width = w;			piede.piedeInt.width = piede.toppa.width=w-2;			piede.m.x = w-(piede.m.puls.width+Preferences.pref.toolBarPaddingLR);			piede.ss.x = piede.m.x-(piede.ss.puls.width+Preferences.pref.toolBarPaddingLR)-2			piede.selector.x = piede.m.x-(piede.selector.puls.width+Preferences.pref.toolBarPaddingLR)-2			var deltaW = 0;			if (Preferences.pref.single) {				deltaW = 48;			}			var bbb;			if (piede.selector.visible) {				piede.contr.x = piede.selector.x-piede.contr.width-2;				bbb = 1;			} else {				piede.contr.x = piede.m.x-piede.contr.width-2;				bbb = 1.8;			}			if (!piede.contr.volume_ctrl.visible) {				piede.contr.x+=piede.contr.volume_ctrl.width+2; 			}			piede.counter.lab.width = piede.counter.lab.textWidth+Preferences.pref.deltaCounter;			piede.counter.fondo.width = piede.counter.lab.width+(piede.counter.lab.x*2);			piede.counter.x = piede.contr.x-piede.counter.width-2;			piede.indice.fondo.width = piede.counter.x-piede.indice.x - 2 - piede.indice.fondo.x			piede.indice.barr.width = piede.indice.fondo.width + (piede.indice.fondo.x*2) - 2;			piede.indice.barrEst.width = piede.indice.barr.width+2;			barr_width = piede.indice.barr.width;			/*piede.contr.x = int(w-(piede.selector.x+piede.selector.lab.textWidth+5)-(w-piede.m.x)+deltaW-20);			piede.ss.x = w-95;*/			piede.myMenu.x = w-piede.myMenu.width-4;		}		//		function scratch(t) {			avvia_scratch();			piede.indice.curs.startDrag(false,new Rectangle(0,piede.indice.curs.y,piede.indice.barr.width,piede.indice.curs.y));		}		function stopScratch(t) {			if (piede.contr.playpause.currentFrame == 2 && Preferences.pref.tipo == "flv") {				this.parent.mySuperPlayer.myPlayer.NS.resume();			}			this.removeEventListener(Event.ENTER_FRAME, this["scratch_"+Preferences.pref.tipo]);			avvia_indice();			t.stopDrag();		}			function avvia_scratch() {			this.removeEventListener(Event.ENTER_FRAME, this["indice_"+Preferences.pref.tipo]);			this.parent.mySuperPlayer.myPlayer.NS.pause();			if (Preferences.pref.tipo == "mp3") {				this.parent.mySuperPlayer.myPlayer.myStopStatus = false;				piede.contr.playpause.simb.gotoAndStop(2);			}			this.addEventListener(Event.ENTER_FRAME, this["scratch_"+Preferences.pref.tipo]);			//this.parent.mySuperPlayer.myPlayer.mp3Sound.stop();		}		function scratch_swf(event) {			this.parent.mySuperPlayer.mbuto(getTimer()+",scratchswf,0,"+(piede.indice.curs.x/barr_width));		}		function scratch_flv(event) {			this.parent.mySuperPlayer.mbuto(getTimer()+",scratchflv,0,"+(piede.indice.curs.x/barr_width));		}		function scratch_mp3(event) {			this.parent.mySuperPlayer.mbuto(getTimer()+",scratchmp3,0,"+(piede.indice.curs.x/barr_width));		}		//		function avanti(t) {			this.parent.mySuperPlayer.mbuto(getTimer()+",functionFORWARD,0,");		}		function indietro(t) {			this.parent.mySuperPlayer.mbuto(getTimer()+",functionREWIND,0,");		}		function myPlaypause(t) {			if (this.parent.mySuperPlayer.myPlayer.myStopStatus) {				piede.contr.playpause.simb.gotoAndStop(2);				this.parent.mySuperPlayer.mbuto(getTimer()+",functionPLAY,0")			} else {				piede.contr.playpause.simb.gotoAndStop(1);				this.parent.mySuperPlayer.mbuto(getTimer()+",functionSTOP,0")			}		}		public function myRemoveThumb(t) {		}		public function myRemoveThumb2(t) {			if (Preferences.pref.thumbSaver) {				this.parent.myThumbSaver.removeChild(this.parent.myThumbSaver.newT);				this.parent.myThumbSaver.addChild(this.parent.myThumbSaver.shot);			}			Preferences.pref.autostop = "false";			piede.contr.playpause.avvia({fnz:myPlaypause,fnzOut:null,alt:Preferences.pref.playpauseAlt});			parent.mySuperPlayer.avvia(0)			//navigateToURL(new URLRequest(Preferences.pref.myViPath+parent.mySuperPlayer.currMov));			var myLoader = new URLLoader(new URLRequest(Preferences.pref.myViPath+parent.mySuperPlayer.currMov));			this.removeChild(ppBig);		}		public function visualizzappBig() {			this.ppBig = new PlayPause();			ppBig.scaleX = ppBig.scaleY = 4;			this.addChild(ppBig);			ppBig.x = (w-ppBig.width)/2;			ppBig.y = (h-ppBig.height)/2;			ppBig.avvia({fnz:myRemoveThumb,fnzOut:myRemoveThumb2,alt:Preferences.pref.ppBigAlt});			ppBig.gotoAndStop(1);					}		function creaContextMenu(stat) {			var item			myContextMenu = new ContextMenu();			myContextMenu.hideBuiltInItems();			//mPlay = new ContextMenu();			//mPlay.hideBuiltInItems();			if (!Preferences.pref.single) {				if (stat == "player") {					item = new ContextMenuItem("Playlist")					item.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT,avviaSelector);					myContextMenu.customItems.push(item);				} else {					item = new ContextMenuItem("Slideshow")					item.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT,avviaSS);					myContextMenu.customItems.push(item);					//mPlay.customItems.push(new ContextMenuItem("Playlist",avviaSelector));					if (Preferences.pref.noImg) {						myContextMenu.customItems[0].enabled = false;						myContextMenu.customItems[0].caption = "Slideshow (no images)";					}				}			}			item = new ContextMenuItem("Scale: Fit player size")			item.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT,scaleFit);			myContextMenu.customItems.push(item);			item = new ContextMenuItem("Scale: 100%")			item.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT,scale100);			myContextMenu.customItems.push(item);			item = new ContextMenuItem("Fullscreen")			myContextMenu.customItems.push(item);			item.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT,fs);			item = new ContextMenuItem("Print this content")			myContextMenu.customItems.push(item);			item.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT,myPrint);			if (Preferences.pref.downPath != Preferences.pref.myPath) {				item = new ContextMenuItem("Download")				myContextMenu.customItems.push(item);				item.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT,dw);			}			if (Preferences.pref.embePath != Preferences.pref.myPath) {				item = new ContextMenuItem("Embed")				myContextMenu.customItems.push(item);				item.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT,apriEmbed);			}			myContextMenu.addEventListener(ContextMenuEvent.MENU_SELECT, menuSelectHandler);			parent.contextMenu = myContextMenu;			/*mPlay.customItems.push(new ContextMenuItem("Scale: Fit player size",scaleFit));			mPlay.customItems.push(new ContextMenuItem("Scale: 100%",scale100));			mPlay.customItems.push(new ContextMenuItem("Fullscreen",fs));			mPlay.customItems.push(new ContextMenuItem("Print this content",myPrint));			if (Preferences.pref.downPath != Preferences.pref.myPath) {				mPlay.customItems.push(new ContextMenuItem("Download", dw));			}			mPlay.customItems.push(new ContextMenuItem("Embed",apriEmbed));			this.mySuperPlayer.menu = mPlay;		*/}        private function menuSelectHandler(event:ContextMenuEvent):void {            trace("menuSelectHandler: " + event);        }		function apriMenu(t) {			var menuTxt = "";			if (!piede.myMenu.visible) {				if (piede.toppa.visible) {					if (!Preferences.pref.single) {						if (!Preferences.pref.noImg) {							menuTxt += "<a href=\"event:"+this+".avviaSS\">Slideshow</a><br/>";						} else {							menuTxt += "<div>Slideshow (no images)</div>";						}					}					menuTxt += "<div>Scale: Fit player size</div>";					menuTxt += "<div>Scale: 100%</div>";					menuTxt += "<a href=\"event:"+this+".fs\">Fullscreen</a><br/>";					menuTxt += "<a href=\"event:"+this+".myPrint\">Print this content</a><br/>";					if (Preferences.pref.downPath != Preferences.pref.myPath) {						menuTxt += "<div>Download</div>";					}					if (Preferences.pref.embePath != Preferences.pref.myPath) {						menuTxt += "<a href=\"event:"+this+".apriEmbed\">Embed</a>";					}				} else {					if (!Preferences.pref.single) {						menuTxt += "<a href=\"event:"+this+".avviaSelector\">Playlist</a><br/>";					}					menuTxt += "<a href=\"event:"+this+".scaleFit\">Scale: Fit player size</a><br/>";					menuTxt += "<a href=\"event:"+this+".scale100\">Scale: 100%</a><br/>";					menuTxt += "<a href=\"event:"+this+".fs\">Fullscreen</a><br/>";					menuTxt += "<a href=\"event:"+this+".myPrint\">Print this content</a><br/>";					if (Preferences.pref.downPath != Preferences.pref.myPath) {						menuTxt += "<a href=\"event:"+this+".dw\">Download</a><br/>";					}					menuTxt += "<a href=\"event:"+this+".apriEmbed\">Embed</a>";				}				piede.myMenu.wordWrap=false;				piede.myMenu.addEventListener(TextEvent.LINK, linkHandler);				piede.myMenu.htmlText = "<p class=\"playerMenu\">"+menuTxt+"</p>";				piede.myMenu.height = piede.myMenu.textHeight+5;				piede.myMenu.width = piede.myMenu.textWidth+10;				piede.myMenu.y = -piede.myMenu.height+3;				piede.myMenu.x = w-piede.myMenu.width-10;				//piede.myMenu.fondo.y = -piede.myMenu.y-piede.y;				this.parent.setChildIndex(this, this.parent.numChildren-1);			} else {				this.parent.setChildIndex(this, this.parent.numChildren-2);			}			piede.myMenu.visible = !piede.myMenu.visible;		}		function linkHandler(e) {			piede.myMenu.visible = false;			this.parent.setChildIndex(this, this.parent.numChildren-2);			this[e.text.substring(e.text.indexOf(".")+1, e.text.length)](e);		}		//		public function fs(e):void {			//parent.parent.fs(e);			switch (stage.displayState) {				case "normal" :					stage.displayState="fullScreen";					break;				case "fullScreen" :				default :					stage.displayState="normal";					break;			}		}		public function fs2(e) {			switch (stage.displayState) {				case "normal" :					stage.displayState="fullScreen";					break;				case "fullScreen" :				default :					stage.displayState="normal";					break;			}		/*			if (piede.contr.playpause.currentFrame == 2) {				myPlaypause(null);			}			var tmp;			if (Preferences.pref.single) {				tmp = Preferences.pref.startUrl.split(",");				if (tmp[0].indexOf("http://") != -1) {					trace(Preferences.pref.myFsPath+tmp[0]+"&tit="+tmp[1]+"&out=true");					navigateToURL(new URLRequest(Preferences.pref.myFsPath+tmp[0]+"&tit="+tmp[1]+"&out=true"), "_blank");				} else {					trace("javascript:popupwindow('FULL','FULL','"+Preferences.pref.myFsPath+tmp[0]+"&tit="+tmp[1]+"','FLXERPLAYER','no','yes');");					navigateToURL(new URLRequest("javascript:popupwindow('FULL','FULL','"+Preferences.pref.myFsPath+tmp[0]+"&tit="+tmp[1]+"','FLXERPLAYER','no','yes');"),"_self");				}			} else {				tmp = Preferences.pref.startUrl;				if (tmp.indexOf("http://") != -1) {					trace(Preferences.pref.myFsPath+tmp+"&out=true");					navigateToURL(new URLRequest(Preferences.pref.myFsPath+tmp+"&out=true"),"_blank");				} else {					trace("javascript:popupwindow('FULL','FULL','"+Preferences.pref.myFsPath+tmp+"','FLXERPLAYER','no','yes');");					navigateToURL(new URLRequest("javascript:popupwindow('FULL','FULL','"+Preferences.pref.myFsPath+tmp+"','FLXERPLAYER','no','yes');"),"_self");				}			}*/		}		public function scaleFit(e) {			Preferences.pref.resizza_onoff = true;			parent.mySuperPlayer.resizza();		}		public function scale100(e) {			Preferences.pref.resizza_onoff=false;			parent.mySuperPlayer.resizza();		}		public function myPrint(e) {			if (piede.contr.playpause.currentFrame == 2) {				myPlaypause(null);			}			var pageCount:Number = 0;			var my_pj:PrintJob = new PrintJob();			if (my_pj.start()) {				if (my_pj.addPage(this.parent)) {					pageCount++;				}			}			if (pageCount>0) {				my_pj.send();			}		}		public function apriEmbed(e) {			this.parent.setChildIndex(this, this.parent.numChildren-1);			this.addChild(this.myEmbed);			this.myEmbed.x = int(w/2);			this.myEmbed.y = int(h/2);			var tmp = Preferences.pref.embePath+Preferences.pref.startUrl;			myEmbed.lab_i.text = "<object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=9,0,0,0\" width=\""+Preferences.pref.w+"\" height=\""+Preferences.pref.h+"\"><param name=\"movie\" value=\""+tmp+"\"></param><param name=\"wmode\" value=\"window\"></param><param name=\"allowfullscreen\" value=\"true\"></param><param name=\"allowscriptaccess\" value=\"always\"></param><embed src=\""+tmp+"\" type=\"application/x-shockwave-flash\" wmode=\"window\" allowfullscreen=\"true\" allowscriptaccess=\"always\" width=\""+Preferences.pref.w+"\" height=\""+Preferences.pref.h+"\"></embed></object>";			myEmbed.c.avvia({fnzOut:chiudiEmbed,alt:Preferences.pref.embClose,txt:"close"})		}		public function chiudiEmbed(c) {			this.parent.setChildIndex(this, this.parent.numChildren-2);			this.removeChild(myEmbed);		}		public function dw(e) {			//var tmp = this.parent.mySuperPlayer.currMov.split(",");			navigateToURL(new URLRequest(Preferences.pref.downPath+Starter.myReplace(this.parent.mySuperPlayer.currMov, Preferences.pref.myPath, "")),"_self");			trace("download "+Starter.myReplace(this.parent.mySuperPlayer.currMov, Preferences.pref.myPath, ""));		}		//		function avvia_indice() {			var tmp = Preferences.pref.tipo;			if (tmp == "txt") {				tmp = "swf";			}			this.addEventListener(Event.ENTER_FRAME, this["indice_"+tmp]);		}		function myTime(mm) {			var min;			var tmp;			var tmp2;			var sec;			if (mm>60) {				tmp = int(mm/60);				if (tmp.toString().length<2) {					min = "0"+tmp;				} else {					min = tmp;				}				tmp2 = int(mm-(60*tmp));				if (tmp2.toString().length<2) {					sec = "0"+tmp2;				} else {					sec = tmp2;				}			} else {				min = "00";				if (int(mm).toString().length<2) {					sec = "0"+int(mm);				} else {					sec = int(mm);				}			}			return min+":"+sec;		}		function indice_flv(event) {			if (this.parent.mySuperPlayer.myPlayer.myDuration != undefined) {				if (this.parent.mySuperPlayer.myPlayer.NS.bytesLoaded<this.parent.mySuperPlayer.myPlayer.NS.bytesTotal) {					//this.lab_i.htmlText = this.tit+": Playing "+myTime(this.parent.mySuperPlayer.myPlayer.NS.time)+" / "+myTime(this.parent.mySuperPlayer.myPlayer.myDuration);					this.piede.counter.lab.htmlText = myTime(this.parent.mySuperPlayer.myPlayer.NS.time)+" / "+myTime(this.parent.mySuperPlayer.myPlayer.myDuration);					/*if (this.parent.mySuperPlayer.info) {					this.lab_i.htmlText += " (Size: "+int(this.parent.mySuperPlayer.myPlayer.NS.bytesLoaded/1024)+" / "+int(this.parent.mySuperPlayer.myPlayer.NS.bytesTotal/1024)+" Kb W:"+this.parent.mySuperPlayer.monitor.video.vid_flv.width+" Kb H:"+this.parent.mySuperPlayer.monitor.video.vid_flv.height+" )";					}*/					piede.indice.barr.width = barr_width*(this.parent.mySuperPlayer.myPlayer.NS.bytesLoaded/this.parent.mySuperPlayer.myPlayer.NS.bytesTotal);				} else if (this.parent.mySuperPlayer.myPlayer.NS.bytesLoaded == this.parent.mySuperPlayer.myPlayer.NS.bytesTotal && this.parent.mySuperPlayer.myloaded == false) {					this.parent.mySuperPlayer.myloaded = true;					piede.indice.barr.width = barr_width;				} else {					//this.lab_i.htmlText = this.tit+": Playing "+myTime(this.parent.mySuperPlayer.myPlayer.NS.time)+" / "+myTime(this.parent.mySuperPlayer.myPlayer.myDuration);					this.piede.counter.lab.htmlText = myTime(this.parent.mySuperPlayer.myPlayer.NS.time)+" / "+myTime(this.parent.mySuperPlayer.myPlayer.myDuration);					/*if (this.parent.mySuperPlayer.info) {					this.lab_i.htmlText += " (Size: "+int(this.parent.mySuperPlayer.myPlayer.NS.bytesTotal/1024)+" Kb W:"+this.parent.mySuperPlayer.monitor.video.vid_flv.width+" Kb H:"+this.parent.mySuperPlayer.monitor.video.vid_flv.height+" )";					}*/				}				piede.indice.curs.x = (barr_width)*(this.parent.mySuperPlayer.myPlayer.NS.time/this.parent.mySuperPlayer.myPlayer.myDuration);//				piede.indice.path.width = piede.indice.curs.x;				//piede.indice.curs.enabled = true;			} else {				if (this.parent.mySuperPlayer.myPlayer.NS.bytesLoaded<this.parent.mySuperPlayer.myPlayer.NS.bytesTotal) {					this.piede.counter.lab.htmlText = myTime(this.parent.mySuperPlayer.myPlayer.NS.time);					/*this.lab_i.htmlText = this.tit+": Playing "+myTime(this.parent.mySuperPlayer.myPlayer.NS.time)+" sec.";					if (this.parent.mySuperPlayer.info) {					this.lab_i.htmlText += " (Size: "+int(this.parent.mySuperPlayer.myPlayer.NS.bytesLoaded/1024)+" / "+int(this.parent.mySuperPlayer.myPlayer.NS.bytesTotal/1024)+" Kb W:"+this.parent.mySuperPlayer.monitor.video.vid_flv.width+" Kb H:"+this.parent.mySuperPlayer.monitor.video.vid_flv.height+" )";					}*/					piede.indice.barr.width = barr_width*(this.parent.mySuperPlayer.myPlayer.NS.bytesLoaded/this.parent.mySuperPlayer.myPlayer.NS.bytesTotal);				} else if (this.parent.mySuperPlayer.myPlayer.NS.bytesLoaded == this.parent.mySuperPlayer.myPlayer.NS.bytesTotal && this.parent.mySuperPlayer.myloaded == false) {					this.parent.mySuperPlayer.myloaded = true;					piede.indice.barr.width = barr_width;				} else {					this.piede.counter.lab.htmlText = myTime(this.parent.mySuperPlayer.myPlayer.NS.time);					/*this.lab_i.htmlText = this.tit+": Playing "+int(this.parent.mySuperPlayer.myPlayer.NS.time)+" sec.";					if (this.parent.mySuperPlayer.info) {					this.lab_i.htmlText += " (Size: "+int(this.parent.mySuperPlayer.myPlayer.NS.bytesTotal/1024)+" Kb W:"+this.parent.mySuperPlayer.monitor.video.vid_flv.width+" Kb H:"+this.parent.mySuperPlayer.monitor.video.vid_flv.height+" )";					}*/				}				piede.indice.curs.x = 0;//				piede.indice.curs.enabled = false;			}		}		function indice_swf(event) {			piede.indice.curs.x = (barr_width)*(this.parent.mySuperPlayer.myPlayer.swfTrgt.currentFrame/this.parent.mySuperPlayer.myPlayer.swfTrgt.totalFrames);			this.piede.counter.lab.htmlText = myTime((this.parent.mySuperPlayer.myPlayer.swfTrgt.currentFrame/25)*60)+" / "+myTime((this.parent.mySuperPlayer.myPlayer.swfTrgt.totalFrames/25)*60);		}		function indice_mp3(event) {			if (this.parent.mySuperPlayer.myPlayer.mp3Sound.bytesLoaded<this.parent.mySuperPlayer.myPlayer.mp3Sound.bytesTotal) {				//this.lab_i.htmlText = this.tit+": Playing "+int((this.parent.mySuperPlayer.myPlayer.song.position/1000)/60)+"."+(int(this.parent.mySuperPlayer.myPlayer.song.position/1000)-(int((this.parent.mySuperPlayer.myPlayer.song.position/1000)/60)*60))+" / "+int((this.parent.mySuperPlayer.myPlayer.mp3Sound.length/1000)/60)+"."+(int(this.parent.mySuperPlayer.myPlayer.mp3Sound.length/1000)-(int((this.parent.mySuperPlayer.myPlayer.mp3Sound.length/1000)/60)*60))+" min. (Size: "+int(this.parent.mySuperPlayer.myPlayer.mp3Sound.bytesLoaded/1024)+" / "+int(this.parent.mySuperPlayer.myPlayer.mp3Sound.bytesTotal/1024)+" Kb )";				this.piede.counter.lab.htmlText = myTime(this.parent.mySuperPlayer.myPlayer.song.position/1000)+" / "+myTime(this.parent.mySuperPlayer.myPlayer.mp3Sound.length/1000);				piede.indice.barr.width = barr_width*(this.parent.mySuperPlayer.myPlayer.mp3Sound.bytesLoaded/this.parent.mySuperPlayer.myPlayer.mp3Sound.bytesTotal);			} else if (this.parent.mySuperPlayer.myPlayer.mp3Sound.bytesLoaded == this.parent.mySuperPlayer.myPlayer.mp3Sound.bytesTotal && this.parent.mySuperPlayer.myloaded == false) {				trace("OOOOOOOOOOOOOOOOOOOOOOOOOOOOOO")				this.parent.mySuperPlayer.myloaded = true;				piede.indice.barr.width = barr_width;			} else {				//this.lab_i.htmlText = this.tit+": Playing "+int((this.parent.mySuperPlayer.myPlayer.song.position/1000)/60)+"."+(int(this.parent.mySuperPlayer.myPlayer.song.position/1000)-(int((this.parent.mySuperPlayer.myPlayer.song.position/1000)/60)*60))+" / "+int((this.parent.mySuperPlayer.myPlayer.mp3Sound.length/1000)/60)+"."+(int(this.parent.mySuperPlayer.myPlayer.mp3Sound.length/1000)-(int((this.parent.mySuperPlayer.myPlayer.mp3Sound.length/1000)/60)*60))+" min. (Size: "+int(this.parent.mySuperPlayer.myPlayer.mp3Sound.bytesTotal/1024)+" Kb )";				this.piede.counter.lab.htmlText = myTime(this.parent.mySuperPlayer.myPlayer.song.position/1000)+" / "+myTime(this.parent.mySuperPlayer.myPlayer.mp3Sound.length/1000);			}			piede.indice.curs.x = (barr_width)*(this.parent.mySuperPlayer.myPlayer.song.position/this.parent.mySuperPlayer.myPlayer.mp3Sound.length);		}		function reportKeyDown(e) {			if (e.keyCode == Keyboard.LEFT) {				indietro(null);			}			if (e.keyCode == Keyboard.RIGHT) {				avanti(null);			}			if (e.keyCode == Keyboard.SPACE) {				myPlaypause(null)			}		}		function resetta() {			piede.contr.playpause.simb.gotoAndStop(1);			piede.indice.curs.x = 0;		}	}}